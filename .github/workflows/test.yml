# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unit tests

on:
  workflow_dispatch:
  push:
    branches:
      - 'develop'
      - 'main'
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'
      - 'release/**'

jobs:
  build:

    runs-on: ubuntu-20.04

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: lettercraft
          POSTGRES_USER: lettercraft_user
          POSTGRES_PASSWORD: lettercraft_pwd
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    strategy:
      matrix:
        python-version: ['3.10']
        node-version: ['16.x', '18.x']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Python dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install virtualenv
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run all tests
      env:
        # Provide PostgreSQL environment variables in order to default to TCP connection
        PGDATABASE: lettercraft
        PGHOST: localhost
        PGPORT: ${{ job.services.postgres.ports['5432'] }}
        PGUSER: lettercraft_user
        PGPASSWORD: lettercraft_pwd
      run: |
        cat bootstrap_ci.txt | python bootstrap.py
        yarn
        yarn django migrate
        yarn static-p
        find static
        yarn start-back-p &
        chromedriver --version
        yarn front yarn graphql-codegen
        yarn test
