# Generated by Django 4.2.7 on 2024-04-09 12:08

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('source', '0005_placeholder_source'),
        ('space', '0008_alter_spacedescription_source'),
        ('person', '0012_remove_agentdateofbirth_agent_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgentDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name to help identify this object', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Longer description to help identify this object')),
                ('source_mention', models.CharField(blank=True, choices=[('direct', 'directly mentioned'), ('implied', 'implied')], help_text='How is this entity presented in the text?', max_length=32)),
                ('source_location', models.CharField(blank=True, help_text='Specific location(s) where the entity is mentioned or described in the source text', max_length=200)),
                ('is_group', models.BooleanField(default=False, help_text="Whether this agent is a group of people (e.g. 'the nuns of Poitiers').")),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name to help identify this object', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Longer description to help identify this object')),
                ('identifiable', models.BooleanField(default=True, help_text='Whether this entity is identifiable (i.e. can be cross-referenced between descriptions), or a generic description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certainty', models.IntegerField(choices=[(0, 'uncertain'), (1, 'somewhat certain'), (2, 'certain')], default=2, help_text='How certain are you of this value?')),
                ('note', models.TextField(blank=True, help_text='Additional notes')),
                ('description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='person.agentdescription')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='person.historicalperson')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonDateOfDeath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certainty', models.IntegerField(choices=[(0, 'uncertain'), (1, 'somewhat certain'), (2, 'certain')], default=2, help_text='How certain are you of this value?')),
                ('note', models.TextField(blank=True, help_text='Additional notes')),
                ('year_lower', models.IntegerField(default=400, help_text='The earliest possible year for this value', validators=[django.core.validators.MinValueValidator(400), django.core.validators.MaxValueValidator(800)])),
                ('year_upper', models.IntegerField(default=800, help_text='The latest possible year for this value', validators=[django.core.validators.MinValueValidator(400), django.core.validators.MaxValueValidator(800)])),
                ('year_exact', models.IntegerField(blank=True, help_text='The exact year of the value (if known). This will override the values in the lower and upper bounds fields.', null=True, validators=[django.core.validators.MinValueValidator(400), django.core.validators.MaxValueValidator(800)])),
                ('person', models.ForeignKey(help_text='date on which this person died', on_delete=django.db.models.deletion.CASCADE, to='person.historicalperson')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonDateOfBirth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certainty', models.IntegerField(choices=[(0, 'uncertain'), (1, 'somewhat certain'), (2, 'certain')], default=2, help_text='How certain are you of this value?')),
                ('note', models.TextField(blank=True, help_text='Additional notes')),
                ('year_lower', models.IntegerField(default=400, help_text='The earliest possible year for this value', validators=[django.core.validators.MinValueValidator(400), django.core.validators.MaxValueValidator(800)])),
                ('year_upper', models.IntegerField(default=800, help_text='The latest possible year for this value', validators=[django.core.validators.MinValueValidator(400), django.core.validators.MaxValueValidator(800)])),
                ('year_exact', models.IntegerField(blank=True, help_text='The exact year of the value (if known). This will override the values in the lower and upper bounds fields.', null=True, validators=[django.core.validators.MinValueValidator(400), django.core.validators.MaxValueValidator(800)])),
                ('person', models.ForeignKey(help_text='date on which this person was born', on_delete=django.db.models.deletion.CASCADE, to='person.historicalperson')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AgentDescriptionSocialStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certainty', models.IntegerField(choices=[(0, 'uncertain'), (1, 'somewhat certain'), (2, 'certain')], default=2, help_text='How certain are you of this value?')),
                ('note', models.TextField(blank=True, help_text='Additional notes')),
                ('source_mention', models.CharField(blank=True, choices=[('direct', 'directly mentioned'), ('implied', 'implied')], help_text='How is this information presented in the text?', max_length=32)),
                ('source_location', models.CharField(blank=True, help_text='Specific location of the information in the source text', max_length=200)),
                ('source_terminology', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, help_text='Relevant terminology used in the source text', size=5)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_statuses', to='person.agentdescription')),
                ('status_marker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_statuses', to='person.statusmarker')),
            ],
            options={
                'verbose_name': 'social status description',
            },
        ),
        migrations.CreateModel(
            name='AgentDescriptionName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certainty', models.IntegerField(choices=[(0, 'uncertain'), (1, 'somewhat certain'), (2, 'certain')], default=2, help_text='How certain are you of this value?')),
                ('note', models.TextField(blank=True, help_text='Additional notes')),
                ('source_mention', models.CharField(blank=True, choices=[('direct', 'directly mentioned'), ('implied', 'implied')], help_text='How is this information presented in the text?', max_length=32)),
                ('source_location', models.CharField(blank=True, help_text='Specific location of the information in the source text', max_length=200)),
                ('source_terminology', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, help_text='Relevant terminology used in the source text', size=5)),
                ('name', models.CharField(max_length=256)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='names', to='person.agentdescription')),
            ],
            options={
                'verbose_name': 'name used in description',
                'verbose_name_plural': 'names used in description',
            },
        ),
        migrations.CreateModel(
            name='AgentDescriptionLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certainty', models.IntegerField(choices=[(0, 'uncertain'), (1, 'somewhat certain'), (2, 'certain')], default=2, help_text='How certain are you of this value?')),
                ('note', models.TextField(blank=True, help_text='Additional notes')),
                ('source_mention', models.CharField(blank=True, choices=[('direct', 'directly mentioned'), ('implied', 'implied')], help_text='How is this information presented in the text?', max_length=32)),
                ('source_location', models.CharField(blank=True, help_text='Specific location of the information in the source text', max_length=200)),
                ('source_terminology', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, help_text='Relevant terminology used in the source text', size=5)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='person.agentdescription')),
                ('location', models.ForeignKey(help_text='location by which the agent is identified', on_delete=django.db.models.deletion.CASCADE, to='space.spacedescription')),
            ],
            options={
                'verbose_name': 'location description',
            },
        ),
        migrations.CreateModel(
            name='AgentDescriptionGender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certainty', models.IntegerField(choices=[(0, 'uncertain'), (1, 'somewhat certain'), (2, 'certain')], default=2, help_text='How certain are you of this value?')),
                ('note', models.TextField(blank=True, help_text='Additional notes')),
                ('source_mention', models.CharField(blank=True, choices=[('direct', 'directly mentioned'), ('implied', 'implied')], help_text='How is this information presented in the text?', max_length=32)),
                ('source_location', models.CharField(blank=True, help_text='Specific location of the information in the source text', max_length=200)),
                ('source_terminology', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, help_text='Relevant terminology used in the source text', size=5)),
                ('gender', models.CharField(choices=[('FEMALE', 'Female'), ('MALE', 'Male'), ('UNKNOWN', 'Unknown'), ('MIXED', 'Mixed'), ('OTHER', 'Other')], default='UNKNOWN', help_text='The gender of this agent. The option Mixed is only applicable for groups.', max_length=8)),
                ('agent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gender', to='person.agentdescription')),
            ],
            options={
                'verbose_name': 'gender description',
            },
        ),
        migrations.AddField(
            model_name='agentdescription',
            name='describes',
            field=models.ManyToManyField(blank=True, help_text='Historical figure(s) referenced by this description. For groups, this can be multiple people.', through='person.PersonReference', to='person.historicalperson'),
        ),
        migrations.AddField(
            model_name='agentdescription',
            name='source',
            field=models.ForeignKey(help_text='Source text containing this description', on_delete=django.db.models.deletion.PROTECT, to='source.source'),
        ),
        migrations.AddConstraint(
            model_name='agentdescriptionname',
            constraint=models.UniqueConstraint(models.F('name'), models.F('agent'), name='unique_names_for_agent'),
        ),
    ]
